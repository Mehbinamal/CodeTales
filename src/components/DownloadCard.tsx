import React, { useRef } from 'react';
import { X, Download, Github, Star, GitBranch, Users, Clock, Calendar, Heart } from 'lucide-react';
import { CodeStory } from '../types';

interface DownloadCardProps {
  story: CodeStory;
  personalExperience: string;
  onClose: () => void;
}

const DownloadCard: React.FC<DownloadCardProps> = ({ story, personalExperience, onClose }) => {
  const cardRef = useRef<HTMLDivElement>(null);
  const { repository, narrative, insights } = story;

  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    });
  };

  const downloadAsImage = async () => {
    if (!cardRef.current) return;

    try {
      // Dynamically import html2canvas
      const html2canvas = (await import('html2canvas')).default;
      
      const canvas = await html2canvas(cardRef.current, {
        backgroundColor: '#ffffff',
        scale: 2,
        useCORS: true,
        allowTaint: true,
        width: 800,
        height: 1000,
      });

      const link = document.createElement('a');
      link.download = `${repository.name}-story-card.png`;
      link.href = canvas.toDataURL();
      link.click();
    } catch (error) {
      console.error('Error generating image:', error);
      // Fallback to text download
      downloadAsText();
    }
  };

  const downloadAsText = () => {
    const content = `
# ${repository.name} - Code Story

**Repository:** ${repository.name}
**Owner:** ${repository.owner}
**Language:** ${repository.language}
**Stars:** ${repository.stars.toLocaleString()}
**Forks:** ${repository.forks.toLocaleString()}

## Description
${repository.description || 'No description available'}

## Project Insights
- **Total Commits:** ${insights.totalCommits.toLocaleString()}
- **Contributors:** ${insights.contributors}
- **Active Period:** ${insights.activeMonths} months
- **Created:** ${formatDate(repository.createdAt)}
- **Last Updated:** ${formatDate(repository.updatedAt)}

## The Story Behind the Code
${narrative}

${personalExperience ? `## My Personal Experience\n${personalExperience}` : ''}

---
Generated by CodeTales - GitHub Repository Storyteller
${repository.url}
    `.trim();

    const blob = new Blob([content], { type: 'text/plain' });
    const link = document.createElement('a');
    link.download = `${repository.name}-story.txt`;
    link.href = URL.createObjectURL(blob);
    link.click();
    URL.revokeObjectURL(link.href);
  };

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
      <div className="bg-white rounded-3xl shadow-2xl max-w-4xl w-full max-h-[90vh] overflow-y-auto">
        {/* Modal Header */}
        <div className="flex items-center justify-between p-6 border-b border-gray-200">
          <h3 className="text-2xl font-bold text-gray-900">Download Story Card</h3>
          <button
            onClick={onClose}
            className="p-2 hover:bg-gray-100 rounded-full transition-colors duration-200"
          >
            <X className="w-6 h-6 text-gray-500" />
          </button>
        </div>

        {/* Download Options */}
        <div className="p-6 border-b border-gray-200">
          <div className="flex flex-col sm:flex-row gap-4">
            <button
              onClick={downloadAsImage}
              className="flex-1 inline-flex items-center justify-center space-x-2 bg-gradient-to-r from-blue-600 to-purple-600 text-white px-6 py-3 rounded-xl hover:from-blue-700 hover:to-purple-700 transition-all duration-200"
            >
              <Download className="w-5 h-5" />
              <span>Download as Image</span>
            </button>
            
            <button
              onClick={downloadAsText}
              className="flex-1 inline-flex items-center justify-center space-x-2 bg-gray-700 text-white px-6 py-3 rounded-xl hover:bg-gray-800 transition-colors duration-200"
            >
              <Download className="w-5 h-5" />
              <span>Download as Text</span>
            </button>
          </div>
        </div>

        {/* Preview Card */}
        <div className="p-6">
          <div 
            ref={cardRef}
            className="bg-gradient-to-br from-blue-50 via-white to-purple-50 p-8 rounded-2xl border border-gray-200"
            style={{ width: '800px', minHeight: '1000px', margin: '0 auto' }}
          >
            {/* Header */}
            <div className="text-center mb-8">
              <div className="flex items-center justify-center mb-4">
                <Github className="w-12 h-12 text-blue-600 mr-3" />
                <div className="w-3 h-3 bg-purple-500 rounded-full animate-pulse"></div>
              </div>
              <h1 className="text-4xl font-bold text-gray-900 mb-2">
                Code<span className="text-blue-600">Tales</span>
              </h1>
              <p className="text-gray-600">Repository Story Card</p>
            </div>

            {/* Repository Info */}
            <div className="bg-white rounded-2xl p-6 mb-6 shadow-sm">
              <div className="flex items-start justify-between mb-4">
                <div>
                  <h2 className="text-2xl font-bold text-gray-900 mb-1">
                    {repository.name}
                  </h2>
                  <p className="text-lg text-gray-600">by {repository.owner}</p>
                </div>
                <div className="text-right">
                  <div className="flex items-center space-x-1 text-yellow-600 mb-1">
                    <Star className="w-4 h-4" />
                    <span className="font-semibold">{repository.stars.toLocaleString()}</span>
                  </div>
                  <div className="flex items-center space-x-1 text-blue-600">
                    <GitBranch className="w-4 h-4" />
                    <span className="font-semibold">{repository.forks.toLocaleString()}</span>
                  </div>
                </div>
              </div>
              
              {repository.description && (
                <p className="text-gray-700 mb-4">{repository.description}</p>
              )}
              
              <div className="flex flex-wrap gap-2">
                <span className="bg-gray-100 px-3 py-1 rounded-full text-sm font-medium">
                  {repository.language}
                </span>
                <span className="bg-blue-100 text-blue-700 px-3 py-1 rounded-full text-sm font-medium">
                  {insights.totalCommits.toLocaleString()} commits
                </span>
                <span className="bg-purple-100 text-purple-700 px-3 py-1 rounded-full text-sm font-medium">
                  {insights.contributors} contributors
                </span>
              </div>
            </div>

            {/* Stats */}
            <div className="grid grid-cols-3 gap-4 mb-6">
              <div className="bg-white rounded-xl p-4 text-center shadow-sm">
                <GitBranch className="w-6 h-6 text-green-600 mx-auto mb-2" />
                <div className="text-xl font-bold text-gray-900">
                  {insights.totalCommits.toLocaleString()}
                </div>
                <div className="text-sm text-gray-600">Commits</div>
              </div>
              
              <div className="bg-white rounded-xl p-4 text-center shadow-sm">
                <Users className="w-6 h-6 text-purple-600 mx-auto mb-2" />
                <div className="text-xl font-bold text-gray-900">
                  {insights.contributors}
                </div>
                <div className="text-sm text-gray-600">Contributors</div>
              </div>
              
              <div className="bg-white rounded-xl p-4 text-center shadow-sm">
                <Clock className="w-6 h-6 text-blue-600 mx-auto mb-2" />
                <div className="text-xl font-bold text-gray-900">
                  {insights.activeMonths}
                </div>
                <div className="text-sm text-gray-600">Months</div>
              </div>
            </div>

            {/* Story */}
            <div className="bg-white rounded-2xl p-6 mb-6 shadow-sm">
              <h3 className="text-xl font-bold text-gray-900 mb-4 flex items-center">
                <Calendar className="w-5 h-5 mr-2 text-blue-600" />
                The Story Behind the Code
              </h3>
              <p className="text-gray-700 leading-relaxed">{narrative}</p>
            </div>

            {/* Personal Experience */}
            {personalExperience && (
              <div className="bg-gradient-to-r from-pink-50 to-orange-50 rounded-2xl p-6 mb-6 border border-pink-100">
                <h3 className="text-xl font-bold text-gray-900 mb-4 flex items-center">
                  <Heart className="w-5 h-5 mr-2 text-pink-600" />
                  Personal Connection
                </h3>
                <p className="text-gray-700 leading-relaxed italic">"{personalExperience}"</p>
              </div>
            )}

            {/* Footer */}
            <div className="text-center pt-6 border-t border-gray-200">
              <p className="text-sm text-gray-500 mb-2">
                Created: {formatDate(repository.createdAt)} • Updated: {formatDate(repository.updatedAt)}
              </p>
              <p className="text-xs text-gray-400">
                Generated by CodeTales • {repository.url}
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default DownloadCard;